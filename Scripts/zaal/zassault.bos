piece body,head,tail,lthigh,lknee,lshin,lfoot,rthigh,rknee,rshin,rfoot,lforearml,lbladel,rforearml,rbladel,lforearmu,lbladeu,rforearmu,rbladeu;

static-var gun_1, aMoving, bMoving, aapitch, aaheading;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_MOVE			16

#include "sfxtype.h"
#include "exptype.h"

walk()
{
 while (aMoving)
 {
    bMoving = TRUE;
	if (aMoving) {
			turn lthigh to x-axis <70> speed<70>;
			turn lknee to x-axis <-40> speed<88>;
			turn lshin to x-axis <20> speed<88>;
			turn lfoot to x-axis <-50> speed<127>;
			
			turn rthigh to x-axis <-20> speed<127>;
			turn rknee to x-axis <-60> speed<127>;
			turn rshin to x-axis <50> speed<127>;
			turn rfoot to x-axis <30> speed<127>;
			
			turn body to z-axis <5> speed <20>;
			turn lthigh to z-axis <-5> speed <20>;
			turn rthigh to z-axis <-5> speed <20>;
			move body to y-axis [0.7] speed <4000>;			
			turn tail to y-axis <10> speed <40>;
			turn head to x-axis <-10> speed <20>;
			turn tail to x-axis <10> speed <20>;
			wait-for-turn lthigh around x-axis;
		}
			if (aMoving) {	
			turn lthigh to x-axis <-10> speed<97>;
			turn lknee to x-axis <15> speed<88>;
			turn lshin to x-axis <-60> speed<151>;
			turn lfoot to x-axis <30> speed<88>;
			
			turn rthigh to x-axis <40> speed<88>;
			turn rknee to x-axis <-35> speed<88>;
			turn rshin to x-axis <-40> speed<88>;
			turn rfoot to x-axis <35> speed<88>;
			
			move body to y-axis <0> speed <4000>;
			turn head to x-axis <10> speed <20>;
			turn tail to x-axis <-10> speed <20>;
			wait-for-turn lshin around x-axis;
			}
				if (aMoving) {
			turn rthigh to x-axis <70> speed<70>;
			turn rknee to x-axis <-40> speed<88>;
			turn rshin to x-axis <20> speed<88>;
			turn rfoot to x-axis <-50> speed<127>;
			
			turn lthigh to x-axis <-20> speed<127>;
			turn lknee to x-axis <-60> speed<127>;
			turn lshin to x-axis <50> speed<127>;
			turn lfoot to x-axis <30> speed<127>;
			
			turn tail to y-axis <-10> speed <40>;
			turn body to z-axis <-5> speed <20>;
			turn lthigh to z-axis <5> speed <20>;
			turn rthigh to z-axis <5> speed <20>;
			move body to y-axis [0.7] speed <4000>;
			turn head to x-axis <-10> speed <20>;
			turn tail to x-axis <10> speed <20>;
			wait-for-turn rthigh around x-axis;
			}
				if (aMoving) {
			turn rthigh to x-axis <-10> speed<97>;
			turn rknee to x-axis <15> speed<88>;
			turn rshin to x-axis <-60> speed<151>;
			turn rfoot to x-axis <30> speed<88>;
			
			turn lthigh to x-axis <40> speed<88>;
			turn lknee to x-axis <-35> speed<88>;
			turn lshin to x-axis <-40> speed<88>;
			turn lfoot to x-axis <35> speed<88>;
			
			
			move body to y-axis <0> speed <4000>;
			turn head to x-axis <10> speed <20>;
			turn tail to x-axis <-10> speed <20>;
			wait-for-turn rshin around x-axis;
			}
		}
		return 0;
}

Halt()
{	
	sleep 150;
	if(!aMoving)
	{
		bMoving = FALSE;
		turn lfoot		to x-axis <0> 		speed <200>;
		turn rfoot		to x-axis <0> 		speed <200>;
		turn rthigh 	to x-axis <0> 		speed <200>;
		turn lthigh 	to x-axis <0> 		speed <200>;
		turn lshin  	to x-axis <0> 		speed <200>;
		turn rshin 		to x-axis <0> 		speed <200>;
		turn lknee  	to x-axis <0> 		speed <200>;
		turn rknee 		to x-axis <0> 		speed <200>;
	}
}

StartMoving()
{
	aMoving = TRUE;
	if (!bMoving)
	{
		start-script Walk();
	}
}

StopMoving()
{
	aMoving = FALSE;
	start-script Halt();
}

Create()
{
	gun_1 = 1;
	emit-sfx 1024+2 from body;
}

SweetSpot(piecenum)
	{	piecenum=body;	}	
	
AimFromPrimary(piecenum)
	{	piecenum=head;	}

AimFromSecondary(piecenum)
	{	piecenum=head;	}

QueryPrimary(piecenum)
	{	piecenum=head; }
	
QuerySecondary(piecenum)
	{	piecenum=head; }


AimPrimary(heading,pitch)
	{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn head to y-axis heading speed <5000>;
	turn head to x-axis 0 -pitch speed <5000>;
	return(TRUE);
	}

AimSecondary(heading,pitch)
	{
	aapitch = pitch;
	aaheading = heading;
	return(TRUE);
	}
		
Shot1()
	{
	++gun_1;
	if (gun_1 > 4)
		{
		gun_1 = 1;
		}
	if (gun_1 == 1)
		{
		turn lforearmu to y-axis <-140> speed <600>;
		turn lbladeu to y-axis <140> speed <600>;
		wait-for-turn lbladeu around y-axis;
		turn lforearmu to y-axis <0> speed <120>;
		turn lbladeu to y-axis <0> speed <120>;
		}
	if (gun_1 == 2)
		{
		turn lforearml to y-axis <-140> speed <600>;
		turn lbladel to y-axis <140> speed <600>;
		wait-for-turn lbladel around y-axis;
		turn lforearml to y-axis <0> speed <120>;
		turn lbladel to y-axis <0> speed <120>;
		}
	if (gun_1 == 3)
		{
		turn rforearmu to y-axis <140> speed <600>;
		turn rbladeu to y-axis <-140> speed <600>;
		wait-for-turn rbladeu around y-axis;
		turn rforearmu to y-axis <0> speed <120>;
		turn rbladeu to y-axis <0> speed <120>;
		}
	if (gun_1 == 4)
		{
		turn rforearml to y-axis <140> speed <600>;
		turn rbladel to y-axis <-140> speed <600>;
		wait-for-turn rbladel around y-axis;
		turn rforearml to y-axis <0> speed <120>;
		turn rbladel to y-axis <0> speed <120>;
		}
	}

Shot2()
	{   
	    turn head to x-axis 0 -aapitch speed <400>;
        turn head to y-axis aaheading speed <300>;
	    wait-for-turn head around x-axis;
		turn lforearmu to y-axis <-140> speed <600>;
		turn lbladeu to y-axis <140> speed <600>;
		turn lforearml to y-axis <-140> speed <600>;
		turn lbladel to y-axis <140> speed <600>;	
		turn rforearmu to y-axis <140> speed <600>;
		turn rbladeu to y-axis <-140> speed <600>;
		turn rforearml to y-axis <140> speed <600>;
		turn rbladel to y-axis <-140> speed <600>;
		emit-sfx 1024+3 from lforearmu;
		emit-sfx 1024+3 from lforearml;
		emit-sfx 1024+3 from rforearmu;
		emit-sfx 1024+3 from rforearml;
		wait-for-turn lbladeu around y-axis;
		wait-for-turn lbladel around y-axis;
		wait-for-turn rbladeu around y-axis;
		wait-for-turn rbladel around y-axis;				
		turn lforearmu to y-axis <0> speed <120>;
		turn lbladeu to y-axis <0> speed <120>;
		turn lforearml to y-axis <0> speed <120>;
		turn lbladel to y-axis <0> speed <120>;
		turn rforearmu to y-axis <0> speed <120>;
		turn rbladeu to y-axis <0> speed <120>;
		turn rforearml to y-axis <0> speed <120>;
		turn rbladel to y-axis <0> speed <120>;
		turn head to y-axis 0 speed <120>;
  	    turn head to x-axis 0 speed <120>; 
    }
    
HitByWeaponId()
	{
	emit-sfx 1024 from body;
	return 100;
	}

Killed( severity, corpsetype )
	{
	corpsetype = 1;
	emit-sfx 1025 from body;
	return( 0 );
	}